# Generated by Django 4.2.7 on 2025-08-16 03:30

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('business', '0001_initial'),
        ('order', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(help_text='결제 금액')),
                ('method', models.CharField(choices=[('card', '카드'), ('cash', '현금'), ('bank_transfer', '계좌이체')], help_text='결제 수단', max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', '결제 대기'), ('paid', '결제 완료'), ('refunded', '환불됨')], default='pending', help_text='결제 상태', max_length=20)),
                ('paid_at', models.DateTimeField(blank=True, help_text='결제 완료 시각', null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='결제 등록 시각')),
                ('imp_uid', models.TextField(blank=True, help_text='PG사 결제 고유 ID', null=True)),
                ('merchant_uid', models.TextField(blank=True, help_text='시스템 결제 ID', null=True)),
                ('receipt_url', models.TextField(blank=True, help_text='발급된 영수증 URL', null=True)),
                ('card_approval_number', models.TextField(blank=True, help_text='카드 승인 번호', null=True)),
                ('bank_name', models.TextField(blank=True, help_text='은행명', null=True)),
                ('payer_name', models.TextField(blank=True, help_text='입금자명', null=True)),
                ('refunded', models.BooleanField(default=False, help_text='환불 여부')),
                ('refund_reason', models.TextField(blank=True, help_text='환불 사유', null=True)),
                ('business', models.ForeignKey(db_column='business_id', on_delete=django.db.models.deletion.CASCADE, to='business.business')),
                ('order', models.ForeignKey(db_column='order_id', on_delete=django.db.models.deletion.CASCADE, to='order.order')),
            ],
            options={
                'verbose_name': '결제',
                'verbose_name_plural': '결제 목록',
                'db_table': 'payments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaxInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_requested', models.BooleanField(default=False, help_text='세금계산서 요청 여부')),
                ('is_issued', models.BooleanField(default=False, help_text='발급 여부')),
                ('invoice_number', models.TextField(blank=True, help_text='세금계산서 번호', null=True)),
                ('payment', models.OneToOneField(db_column='payment_id', on_delete=django.db.models.deletion.CASCADE, to='payment.payment')),
            ],
            options={
                'verbose_name': '세금계산서',
                'verbose_name_plural': '세금계산서 목록',
                'db_table': 'tax_invoices',
            },
        ),
        migrations.CreateModel(
            name='CashReceipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_requested', models.BooleanField(default=False, help_text='현금영수증 요청 여부')),
                ('is_issued', models.BooleanField(default=False, help_text='발급 여부')),
                ('receipt_number', models.TextField(blank=True, help_text='현금영수증 번호', null=True)),
                ('receipt_contact', models.TextField(blank=True, help_text='전화번호 (개인용)', null=True)),
                ('business_number', models.TextField(blank=True, help_text='사업자 등록번호 (법인용)', null=True)),
                ('payment', models.OneToOneField(db_column='payment_id', on_delete=django.db.models.deletion.CASCADE, to='payment.payment')),
            ],
            options={
                'verbose_name': '현금영수증',
                'verbose_name_plural': '현금영수증 목록',
                'db_table': 'cash_receipts',
            },
        ),
        migrations.AddConstraint(
            model_name='payment',
            constraint=models.UniqueConstraint(condition=models.Q(('payment_status', 'paid')), fields=('order',), name='unique_paid_per_order'),
        ),
    ]
