# Generated by Django 4.2.7 on 2025-08-01 03:17

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('business_name', models.CharField(max_length=100, verbose_name='사업장명')),
                ('owner_name', models.CharField(max_length=50, verbose_name='대표자명')),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\d{3}-\\d{3,4}-\\d{4}$')], verbose_name='전화번호')),
                ('address', models.TextField(verbose_name='주소')),
                ('business_registration_number', models.CharField(max_length=12, unique=True, validators=[django.core.validators.RegexValidator('^\\d{3}-\\d{2}-\\d{5}$')], verbose_name='사업자등록번호')),
                ('firebase_uid', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('subscription_plan', models.CharField(choices=[('basic', '기본'), ('premium', '프리미엄'), ('enterprise', '기업')], default='basic', max_length=20, verbose_name='구독 플랜')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '사용자',
                'verbose_name_plural': '사용자들',
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('business_name', models.CharField(max_length=100, verbose_name='거래처명')),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\d{3}-\\d{3,4}-\\d{4}$')], verbose_name='전화번호')),
                ('address', models.TextField(verbose_name='주소')),
                ('business_registration_number', models.CharField(blank=True, max_length=12, null=True, validators=[django.core.validators.RegexValidator('^\\d{3}-\\d{2}-\\d{5}$')], verbose_name='사업자등록번호')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='등록일시')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='businesses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '거래처',
                'verbose_name_plural': '거래처들',
                'db_table': 'businesses',
            },
        ),
        migrations.CreateModel(
            name='FishType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fish_name', models.CharField(max_length=50, verbose_name='어종명')),
                ('aliases', models.TextField(blank=True, null=True, verbose_name='별칭들')),
                ('embedding', models.JSONField(blank=True, null=True, verbose_name='벡터 임베딩')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='등록일시')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fish_types', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '어종',
                'verbose_name_plural': '어종들',
                'db_table': 'fish_types',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('total_price', models.IntegerField(verbose_name='총액')),
                ('order_datetime', models.DateTimeField(verbose_name='주문일시')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='메모')),
                ('source_type', models.CharField(choices=[('voice', '음성'), ('text', '텍스트'), ('manual', '수동입력')], max_length=10, verbose_name='입력방식')),
                ('raw_input_path', models.TextField(blank=True, null=True, verbose_name='원본 입력 파일 경로')),
                ('transcribed_text', models.TextField(blank=True, null=True, verbose_name='변환된 텍스트')),
                ('delivery_date', models.DateField(verbose_name='배송일')),
                ('status', models.CharField(choices=[('pending', '대기중'), ('confirmed', '확인됨'), ('preparing', '준비중'), ('shipped', '출고됨'), ('delivered', '배송완료'), ('cancelled', '취소됨')], default='pending', max_length=20, verbose_name='상태')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='core.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '주문',
                'verbose_name_plural': '주문들',
                'db_table': 'orders',
            },
        ),
        migrations.CreateModel(
            name='SMSRecommendation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('recommended_text', models.TextField(verbose_name='추천 텍스트')),
                ('fish_type', models.CharField(max_length=50, verbose_name='어종')),
                ('price_trend', models.CharField(choices=[('up', '상승'), ('down', '하락'), ('stable', '안정')], max_length=10, verbose_name='가격 동향')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('is_sent', models.BooleanField(default=False, verbose_name='발송여부')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='발송일시')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sms_recommendations', to='core.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sms_recommendations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'SMS 추천',
                'verbose_name_plural': 'SMS 추천들',
                'db_table': 'sms_recommendations',
            },
        ),
        migrations.CreateModel(
            name='PriceData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fish_type', models.CharField(max_length=50, verbose_name='어종')),
                ('market_name', models.CharField(max_length=50, verbose_name='시장명')),
                ('date', models.DateField(verbose_name='날짜')),
                ('min_price', models.IntegerField(verbose_name='최저가')),
                ('max_price', models.IntegerField(verbose_name='최고가')),
                ('avg_price', models.IntegerField(verbose_name='평균가')),
            ],
            options={
                'verbose_name': '시세 데이터',
                'verbose_name_plural': '시세 데이터들',
                'db_table': 'price_data',
                'unique_together': {('fish_type', 'market_name', 'date')},
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.IntegerField(verbose_name='금액')),
                ('method', models.CharField(choices=[('cash', '현금'), ('card', '카드'), ('transfer', '계좌이체'), ('check', '수표')], max_length=10, verbose_name='결제방법')),
                ('status', models.CharField(choices=[('pending', '대기중'), ('completed', '완료'), ('cancelled', '취소'), ('failed', '실패')], default='pending', max_length=10, verbose_name='상태')),
                ('paid_at', models.DateTimeField(blank=True, null=True, verbose_name='결제일시')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='core.business')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='core.order')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '결제',
                'verbose_name_plural': '결제들',
                'db_table': 'payments',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.FloatField(verbose_name='수량')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='단가')),
                ('unit', models.CharField(choices=[('kg', 'kg'), ('box', '상자'), ('piece', '마리')], default='kg', max_length=10, verbose_name='단위')),
                ('fish_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='core.fishtype')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='core.order')),
            ],
            options={
                'verbose_name': '주문 아이템',
                'verbose_name_plural': '주문 아이템들',
                'db_table': 'order_items',
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('stock_quantity', models.FloatField(verbose_name='재고수량')),
                ('unit', models.CharField(choices=[('kg', 'kg'), ('box', '상자'), ('piece', '마리')], default='kg', max_length=10, verbose_name='단위')),
                ('status', models.CharField(choices=[('available', '판매가능'), ('reserved', '예약됨'), ('sold', '판매완료'), ('expired', '유통기한만료')], default='available', max_length=20, verbose_name='상태')),
                ('aquarium_photo_path', models.TextField(blank=True, null=True, verbose_name='수조 사진 경로')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('fish_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventories', to='core.fishtype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '재고',
                'verbose_name_plural': '재고들',
                'db_table': 'inventories',
            },
        ),
    ]
