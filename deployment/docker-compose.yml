version: '3.8'

services:
  frontend:
    image: ${FRONTEND_IMAGE:-nginx:alpine}
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8000}
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  backend:
    image: ${BACKEND_IMAGE:-python:3.11-slim}
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=False
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost}
      - PROJECT_NAME=Team-PICK-O Backend
    depends_on:
      - database
    networks:
      - app-network
    volumes:
      - backend-static:/app/static
      - backend-media:/app/media
    restart: unless-stopped

  database:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=########
      - POSTGRES_USER=########
      - POSTGRES_PASSWORD=########
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - backend-static:/var/www/static
      - backend-media:/var/www/media
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

volumes:
  postgres-data:
  backend-static:
  backend-media:

networks:
  app-network:
    driver: bridge