name: Feature Branch CI (단순화)

on:
  push:
    branches:
      - 'feature/**'

jobs:
  ci-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: 기본 체크
      run: |
        echo "🔍 Feature 브랜치 기본 체크 중..."
        echo "브랜치: ${{ github.ref_name }}"
        echo "커밋: ${{ github.sha }}"
        ls -la
    
    - name: Docker 빌드 테스트
      run: |
        echo "🔨 Docker 빌드 가능 여부 확인..."
        
        # Backend 빌드 체크
        if [ -f "backend/Dockerfile" ]; then
          echo "✅ Backend Dockerfile 존재"
          cd backend && docker build --dry-run . && cd ..
        fi
        
        # Frontend 빌드 체크  
        if [ -f "frontend/Dockerfile" ]; then
          echo "✅ Frontend Dockerfile 존재"
          cd frontend && docker build --dry-run . && cd ..
        fi
    
    - name: 자동 PR 생성 (feature → dev)
      uses: repo-sync/pull-request@v2
      with:
        source_branch: ${{ github.ref_name }}
        destination_branch: "dev"
        github_token: ${{ secrets.GITHUB_TOKEN }}
        pr_title: "🚀 [자동생성] ${{ github.ref_name }} → dev"
        pr_body: |
          ## 📋 변경사항
          - Feature 브랜치: `${{ github.ref_name }}`
          - 커밋 해시: `${{ github.sha }}`
          - 작성자: ${{ github.actor }}
          - 푸시 시간: ${{ github.event.head_commit.timestamp }}
          
          ## 🔍 체크리스트
          - [x] Docker 빌드 가능 확인
          - [ ] 코드 리뷰 필요
          - [ ] 기능 테스트 필요
          - [ ] 충돌 해결 확인
          
          ## 🤖 자동 생성된 PR
          이 PR은 `${{ github.ref_name }}` 브랜치 푸시 시 자동으로 생성되었습니다.
          
          **⚠️ 병합 전 확인사항:**
          1. ✅ 코드 리뷰 완료
          2. ✅ 기능 테스트 완료  
          3. ✅ 충돌 해결 완료
          4. ✅ CI 체크 통과
          
          **📝 변경된 파일들:**
          - 자동으로 감지된 변경사항들이 포함됩니다
        pr_draft: false
        
    - name: PR 생성 결과
      run: |
        echo "✅ Feature 브랜치 CI 완료"
        echo "📝 자동 PR이 dev 브랜치로 생성되었습니다"
        echo "🔗 GitHub에서 PR을 확인하세요"