name: Dev Branch CI (단순화)

on:
  pull_request:
    branches:
      - dev
  # dev 브랜치 직접 푸시는 제외 (PR 통해서만 진행)

jobs:
  build-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: 기본 정보
      run: |
        echo "🔍 Dev 브랜치 빌드 체크 중..."
        echo "이벤트: ${{ github.event_name }}"
        echo "브랜치: ${{ github.ref_name }}"
        echo "커밋: ${{ github.sha }}"
    
    - name: Docker 컴포즈 빌드 테스트
      run: |
        echo "🔨 Docker Compose 빌드 테스트..."
        cd deployment
        
        # 설정 파일 유효성 검사
        docker compose config
        echo "✅ Docker Compose 설정 유효"
        
        # 개발용 빌드 테스트
        if [ -f "docker-compose.dev.yml" ]; then
          docker compose -f docker-compose.dev.yml build
          echo "✅ 개발용 이미지 빌드 성공"
        fi
    
    - name: 프로덕션 준비 확인
      run: |
        echo "🚀 프로덕션 배포 준비 상태 확인..."
        
        # 필수 파일 체크
        files_to_check=(
          "backend/Dockerfile"
          "frontend/Dockerfile" 
          "deployment/docker-compose.yml"
          "deployment/nginx.conf"
        )
        
        for file in "${files_to_check[@]}"; do
          if [ -f "$file" ]; then
            echo "✅ $file 존재"
          else
            echo "❌ $file 누락"
            exit 1
          fi
        done
        
        echo "✅ 모든 필수 파일 존재 확인"
    
    - name: 빌드 완료
      run: |
        echo "✅ Dev 브랜치 CI 완료"
        echo "🚀 main 브랜치로 병합 시 자동 배포됩니다"